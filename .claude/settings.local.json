{
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "WebFetch(domain:notebooklm.google)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(python:*)",
      "Bash(touch:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(ls:*)",
      "Bash(curl:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(./venv/bin/pip install -r requirements/mongodb.txt)",
      "Bash(env)",
      "Bash(docker-compose build:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose:*)",
      "Bash(docker logs:*)",
      "Bash(./venv/bin/pip uninstall bson -y)",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/pip uninstall pymongo motor beanie -y)",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/pip install python-multipart)",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/python -c \"from app.services.model_router import model_router; print(''✅ ModelRouter imported successfully'')\")",
      "Bash(./venv/bin/pip install google-generativeai)",
      "Bash(./venv/bin/python -c \"from app.services.model_router import model_router; print(''✅ ModelRouter imported successfully'')\")",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(chmod:*)",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/pip show google-generativeai)",
      "Bash(./venv/bin/pip show beanie)",
      "Bash(./venv/bin/pip install passlib[bcrypt]==1.7.4 python-jose[cryptography]==3.3.0)",
      "Bash(./venv/bin/pip install 'passlib[bcrypt]==1.7.4' 'python-jose[cryptography]==3.3.0')",
      "Bash(./venv/bin/python -c \"from app.models.user import User; print(''✅ User model imports successfully'')\")",
      "Bash(/Users/amadrazo/Desktop/dev/legalai/Elenchus/test-auth-flow.sh)",
      "Bash(grep:*)",
      "Bash(mv:*)",
      "Bash(/Users/amadrazo/Desktop/dev/legalai/Elenchus/test-final-auth-fix.sh:*)",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(./tests/test-dev-setup.sh:*)",
      "Bash(timeout:*)",
      "Bash(docker exec:*)",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/pip install langfuse)",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/python -c \"from app.services.langfuse_service import langfuse_service; print(''✅ Langfuse service initialized:'', langfuse_service.is_enabled())\")",
      "Bash(./docker-manager.sh dev up:*)",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/pip install -r requirements/rag.txt)",
      "Bash(./venv/bin/pip install qdrant-client google-cloud-storage)",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/python -c \"from app.main import app; print(''✅ Import successful - no errors'')\")",
      "Bash(./venv/bin/python:*)",
      "Bash(git check-ignore:*)",
      "Bash(./venv/bin/pip install PyPDF2 python-docx)"
    ],
    "deny": []
  }
}